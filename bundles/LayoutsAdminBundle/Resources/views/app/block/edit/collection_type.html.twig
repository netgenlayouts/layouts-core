{% trans_default_domain 'nglayouts_app' %}

{% set collection_identifier = collection_identifier|default('default') %}
{% set query_types = nglayouts.config.parameter('query_types') %}
{% set value_types = nglayouts.config.parameter('value_types') %}

{% set allowed_query_types = [] %}
{% set allowed_value_types = [] %}

{% if block.definition.hasCollection(collection_identifier) %}
    {% set collection_config = block.definition.collection(collection_identifier) %}

    {% for query_type in query_types %}
        {% if query_type.enabled and collection_config.validQueryType(query_type.type) %}
            {% set allowed_query_types = allowed_query_types|merge([query_type]) %}
        {% endif %}
    {% endfor %}

    {% for value_type in value_types %}
        {% if value_type.enabled and collection_config.validItemType(value_type.identifier) %}
            {% set allowed_value_types = allowed_value_types|merge([value_type]) %}
        {% endif %}
    {% endfor %}
{% else %}
    {% for query_type in query_types %}
        {% if query_type.enabled %}
            {% set allowed_query_types = allowed_query_types|merge([query_type]) %}
        {% endif %}
    {% endfor %}

    {% for value_type in value_types %}
        {% if value_type.enabled %}
            {% set allowed_value_types = allowed_value_types|merge([value_type]) %}
        {% endif %}
    {% endfor %}
{% endif %}

{% set can_change_collection = allowed_query_types|length > 0 or allowed_value_types|length > 0 %}

{% if block.hasCollection(collection_identifier) and can_change_collection %}
    {% set collection = block.collection(collection_identifier) %}

    {% set type_manual = constant('TYPE_MANUAL', collection) %}
    {% set type_dynamic = constant('TYPE_DYNAMIC', collection) %}

    {% set editable_options = [] %}
    {% set child_selects = [] %}

    {% if allowed_value_types|length > 0 %}
        {% set editable_options = editable_options|merge([{
            label: 'block.edit.collection_type.manual_collection'|trans,
            selected: not collection.hasQuery,
            value: type_manual,
        }]) %}
    {% endif %}

    {% if allowed_query_types|length > 0 %}
        {% set editable_options = editable_options|merge([{
            label: 'block.edit.collection_type.dynamic_collection'|trans,
            selected: collection.hasQuery,
            value: type_dynamic,
        }]) %}

        {% set child_options = [] %}

        {% for query_type in query_types %}
            {% if query_type in allowed_query_types %}
                {% set child_options = child_options|merge([{
                    label: query_type.name,
                    selected: collection.hasQuery and collection.query.queryType.type == query_type.type,
                    value: query_type.type,
                }]) %}
            {% endif %}
        {% endfor %}

        {% set child_selects = child_selects|merge([{
            name: 'query_type',
            label: 'block.edit.query_type'|trans,
            options: child_options,
            linkedWith: type_dynamic,
        }]) %}
    {% endif %}

    {% set editable_data = {
        parentSelect: {
            name: 'new_type',
            label: 'block.edit.collection_type'|trans,
            labelTooltip: 'block.edit.collection_type.tooltip'|trans,
            options: editable_options,
            note: 'block.edit.notice.change_collection_type'|trans,
        },
        childSelects: child_selects,
    } %}

    <div data-component="changeCollectionType" data-component-data="{{ editable_data|json_encode }}"></div>
{% endif %}
